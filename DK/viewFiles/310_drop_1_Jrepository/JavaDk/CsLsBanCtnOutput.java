package no.netcom.ninja.core.system.tuxedo.service.parameters;

import bea.jolt.pool.Result;
import no.netcom.ninja.core.referencetables.SystemDefaultsReferenceTable;
import no.netcom.ninja.core.system.tuxedo.exception.FMLManipulationException;
import no.netcom.ninja.core.util.TypeConverter;


/**
 * @author  Ninja - Generated by Ninja tools : created on 08-10-2019 10:40:24. Fokus 310 drop 1
 */
public class CsLsBanCtnOutput extends ServiceOutput {
	/**
	 * Creates a new instance of CsLsBanCtnOutput
	 *
	 * @throws FMLManipulationException
	 */
	public CsLsBanCtnOutput(int nApplicationStatus) throws FMLManipulationException {
		createFmlBuffer();
		setApplicationCode(nApplicationStatus);
	}


	public CsLsBanCtnOutput() {}


	/**
	 * Creates a new instance of CsLsBanCtnOutput
	 *
	 * @param ds Output dataset from Tuxedo service.
	 * @throws FMLManipulationException
	 */
	public CsLsBanCtnOutput(Result ds) throws FMLManipulationException {
		createFmlBuffer();
		populateFmlBuffer(ds);
	}


	/**
	 * Populates the FML buffer.
	 *
	 * @throws FMLManipulationException
	 */
	private void createFmlBuffer() throws FMLManipulationException {

		fmlBuffer = new FmlField[31];

		this.fmlBuffer[0] = new FmlField("GENERATION", FmlField.TYPE_INTEGER, -1, null, 0, 1);
		this.fmlBuffer[1] = new FmlField("TOTALCOUNT", FmlField.TYPE_INTEGER, -1, null, 1, 1);
		this.fmlBuffer[2] = new FmlField("MOREROWS", FmlField.TYPE_SHORT, -1, null, 2, 1);
		this.fmlBuffer[3] = new FmlField("ROWCOUNT", FmlField.TYPE_INTEGER, -1, null, 3, 1);
		this.fmlBuffer[4] = new FmlField("ROWID", FmlField.TYPE_STRING, 19, null, 4, 1000);
		this.fmlBuffer[5] = new FmlField("SUBSCRIBER_NO", FmlField.TYPE_STRING, 21, null, 5, 1000);
		this.fmlBuffer[6] = new FmlField("EFFECTIVE_DATE", FmlField.TYPE_STRING, 15, null, 6, 1000);
		this.fmlBuffer[7] = new FmlField("INIT_ACTIVATION_DATE", FmlField.TYPE_STRING, 9, null, 7, 1000);
		this.fmlBuffer[8] = new FmlField("SUB_STATUS", FmlField.TYPE_BYTE, -1, null, 8, 1000);
		this.fmlBuffer[9] = new FmlField("SUB_STATUS_DATE", FmlField.TYPE_STRING, 9, null, 9, 1000);
		this.fmlBuffer[10] = new FmlField("SUB_STATUS_LAST_ACT", FmlField.TYPE_STRING, 4, null, 10, 1000);
		this.fmlBuffer[11] = new FmlField("SUB_STATUS_RSN_CODE", FmlField.TYPE_STRING, 5, null, 11, 1000);
		this.fmlBuffer[12] = new FmlField("SOC", FmlField.TYPE_STRING, 10, null, 12, 1000);
		this.fmlBuffer[13] = new FmlField("CAMPAIGN", FmlField.TYPE_STRING, 10, null, 13, 1000);
		this.fmlBuffer[14] = new FmlField("ANL_ROWID", FmlField.TYPE_STRING, 19, null, 14, 1000);
		this.fmlBuffer[15] = new FmlField("LINK_TYPE", FmlField.TYPE_BYTE, -1, null, 15, 1000);
		this.fmlBuffer[16] = new FmlField("CONTROL_NAME", FmlField.TYPE_STRING, 41, null, 16, 1000);
		this.fmlBuffer[17] = new FmlField("ADR_ZIP", FmlField.TYPE_STRING, 10, null, 17, 1000);
		this.fmlBuffer[18] = new FmlField("ADR_STREET_NAME", FmlField.TYPE_STRING, 61, null, 18, 1000);
		this.fmlBuffer[19] = new FmlField("ADR_CITY", FmlField.TYPE_STRING, 40, null, 19, 1000);
		this.fmlBuffer[20] = new FmlField("ADR_POB", FmlField.TYPE_STRING, 11, null, 20, 1000);
		this.fmlBuffer[21] = new FmlField("NAME_ID", FmlField.TYPE_INTEGER, -1, null, 21, 1000);
		this.fmlBuffer[22] = new FmlField("ADDRESS_ID", FmlField.TYPE_INTEGER, -1, null, 22, 1000);
		this.fmlBuffer[23] = new FmlField("NAME_FORMAT", FmlField.TYPE_BYTE, -1, null, 23, 1000);
		this.fmlBuffer[24] = new FmlField("ADDITIONAL_TITLE", FmlField.TYPE_STRING, 61, null, 24, 1000);
		this.fmlBuffer[25] = new FmlField("LISTED_IND", FmlField.TYPE_BYTE, -1, null, 25, 1000);
		this.fmlBuffer[26] = new FmlField("NEXT_CTN", FmlField.TYPE_STRING, 21, null, 26, 1000);
		this.fmlBuffer[27] = new FmlField("NEXT_BAN", FmlField.TYPE_INTEGER, -1, null, 27, 1000);
		this.fmlBuffer[28] = new FmlField("SUSP_RC_RATE_TYPE", FmlField.TYPE_BYTE, -1, null, 28, 1000);
		this.fmlBuffer[29] = new FmlField("SUBSCRIBER_ID", FmlField.TYPE_INTEGER, -1, null, 29, 1000);
		this.fmlBuffer[30] = new FmlField("INTERNAL_CIRCUIT_ID", FmlField.TYPE_STRING, 21, null, 30, 1000);
	} // End of constractor

	public Integer get_GENERATION() throws FMLManipulationException { return ((Integer) this.fmlBuffer[0].getValue(0)); }
	public void set_GENERATION(Integer value) throws FMLManipulationException { this.fmlBuffer[0].setValue(0, value); }


	public Integer get_TOTALCOUNT() throws FMLManipulationException { return ((Integer) this.fmlBuffer[1].getValue(0)); }
	public void set_TOTALCOUNT(Integer value) throws FMLManipulationException { this.fmlBuffer[1].setValue(0, value); }


	public Integer get_MOREROWS() throws FMLManipulationException { return (TypeConverter.shortToInteger((Short) this.fmlBuffer[2].getValue(0))); }
	public void set_MOREROWS(Integer value) throws FMLManipulationException { this.fmlBuffer[2].setValue(0, TypeConverter.integerToShort(value)); }


	public Integer get_ROWCOUNT() throws FMLManipulationException { return ((Integer) this.fmlBuffer[3].getValue(0)); }
	public void set_ROWCOUNT(Integer value) throws FMLManipulationException { this.fmlBuffer[3].setValue(0, value); }


	public String get_ROWID(int nIndex) throws FMLManipulationException { return ((String) this.fmlBuffer[4].getValue(nIndex)); }
	public void set_ROWID(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[4].setValue(nIndex, value); }
	public int get_ROWID_size() throws FMLManipulationException { return (this.fmlBuffer[4].getCount()); }


	public String get_SUBSCRIBER_NO(int nIndex) throws FMLManipulationException { return ((String) this.fmlBuffer[5].getValue(nIndex)); }
	public void set_SUBSCRIBER_NO(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[5].setValue(nIndex, value); }
	public int get_SUBSCRIBER_NO_size() throws FMLManipulationException { return (this.fmlBuffer[5].getCount()); }


	public String get_EFFECTIVE_DATE(int nIndex) throws FMLManipulationException { return ((String) this.fmlBuffer[6].getValue(nIndex)); }
	public void set_EFFECTIVE_DATE(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[6].setValue(nIndex, value); }
	public int get_EFFECTIVE_DATE_size() throws FMLManipulationException { return (this.fmlBuffer[6].getCount()); }


	public String get_INIT_ACTIVATION_DATE(int nIndex) throws FMLManipulationException { return ((String) this.fmlBuffer[7].getValue(nIndex)); }
	public void set_INIT_ACTIVATION_DATE(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[7].setValue(nIndex, value); }
	public int get_INIT_ACTIVATION_DATE_size() throws FMLManipulationException { return (this.fmlBuffer[7].getCount()); }


	public String get_SUB_STATUS(int nIndex) throws FMLManipulationException { return (TypeConverter.byteToString((Byte) this.fmlBuffer[8].getValue(nIndex))); }
	public void set_SUB_STATUS(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[8].setValue(nIndex, TypeConverter.stringToByte(value)); }
	public int get_SUB_STATUS_size() throws FMLManipulationException { return (this.fmlBuffer[8].getCount()); }


	public String get_SUB_STATUS_DATE(int nIndex) throws FMLManipulationException { return ((String) this.fmlBuffer[9].getValue(nIndex)); }
	public void set_SUB_STATUS_DATE(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[9].setValue(nIndex, value); }
	public int get_SUB_STATUS_DATE_size() throws FMLManipulationException { return (this.fmlBuffer[9].getCount()); }


	public String get_SUB_STATUS_LAST_ACT(int nIndex) throws FMLManipulationException { return ((String) this.fmlBuffer[10].getValue(nIndex)); }
	public void set_SUB_STATUS_LAST_ACT(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[10].setValue(nIndex, value); }
	public int get_SUB_STATUS_LAST_ACT_size() throws FMLManipulationException { return (this.fmlBuffer[10].getCount()); }


	public String get_SUB_STATUS_RSN_CODE(int nIndex) throws FMLManipulationException { return ((String) this.fmlBuffer[11].getValue(nIndex)); }
	public void set_SUB_STATUS_RSN_CODE(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[11].setValue(nIndex, value); }
	public int get_SUB_STATUS_RSN_CODE_size() throws FMLManipulationException { return (this.fmlBuffer[11].getCount()); }


	public String get_SOC(int nIndex) throws FMLManipulationException { return ((String) this.fmlBuffer[12].getValue(nIndex)); }
	public void set_SOC(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[12].setValue(nIndex, value); }
	public int get_SOC_size() throws FMLManipulationException { return (this.fmlBuffer[12].getCount()); }


	public String get_CAMPAIGN(int nIndex) throws FMLManipulationException { return ((String) this.fmlBuffer[13].getValue(nIndex)); }
	public void set_CAMPAIGN(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[13].setValue(nIndex, value); }
	public int get_CAMPAIGN_size() throws FMLManipulationException { return (this.fmlBuffer[13].getCount()); }


	public String get_ANL_ROWID(int nIndex) throws FMLManipulationException { return ((String) this.fmlBuffer[14].getValue(nIndex)); }
	public void set_ANL_ROWID(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[14].setValue(nIndex, value); }
	public int get_ANL_ROWID_size() throws FMLManipulationException { return (this.fmlBuffer[14].getCount()); }


	public String get_LINK_TYPE(int nIndex) throws FMLManipulationException { return (TypeConverter.byteToString((Byte) this.fmlBuffer[15].getValue(nIndex))); }
	public void set_LINK_TYPE(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[15].setValue(nIndex, TypeConverter.stringToByte(value)); }
	public int get_LINK_TYPE_size() throws FMLManipulationException { return (this.fmlBuffer[15].getCount()); }


	public String get_CONTROL_NAME(int nIndex) throws FMLManipulationException { return ((String) this.fmlBuffer[16].getValue(nIndex)); }
	public void set_CONTROL_NAME(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[16].setValue(nIndex, value); }
	public int get_CONTROL_NAME_size() throws FMLManipulationException { return (this.fmlBuffer[16].getCount()); }


	public String get_ADR_ZIP(int nIndex) throws FMLManipulationException { return ((String) this.fmlBuffer[17].getValue(nIndex)); }
	public void set_ADR_ZIP(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[17].setValue(nIndex, value); }
	public int get_ADR_ZIP_size() throws FMLManipulationException { return (this.fmlBuffer[17].getCount()); }


	public String get_ADR_STREET_NAME(int nIndex) throws FMLManipulationException { return ((String) this.fmlBuffer[18].getValue(nIndex)); }
	public void set_ADR_STREET_NAME(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[18].setValue(nIndex, value); }
	public int get_ADR_STREET_NAME_size() throws FMLManipulationException { return (this.fmlBuffer[18].getCount()); }


	public String get_ADR_CITY(int nIndex) throws FMLManipulationException { return ((String) this.fmlBuffer[19].getValue(nIndex)); }
	public void set_ADR_CITY(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[19].setValue(nIndex, value); }
	public int get_ADR_CITY_size() throws FMLManipulationException { return (this.fmlBuffer[19].getCount()); }


	public String get_ADR_POB(int nIndex) throws FMLManipulationException { return ((String) this.fmlBuffer[20].getValue(nIndex)); }
	public void set_ADR_POB(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[20].setValue(nIndex, value); }
	public int get_ADR_POB_size() throws FMLManipulationException { return (this.fmlBuffer[20].getCount()); }


	public Integer get_NAME_ID(int nIndex) throws FMLManipulationException { return ((Integer) this.fmlBuffer[21].getValue(nIndex)); }
	public void set_NAME_ID(int nIndex, Integer value) throws FMLManipulationException { this.fmlBuffer[21].setValue(nIndex, value); }
	public int get_NAME_ID_size() throws FMLManipulationException { return (this.fmlBuffer[21].getCount()); }


	public Integer get_ADDRESS_ID(int nIndex) throws FMLManipulationException { return ((Integer) this.fmlBuffer[22].getValue(nIndex)); }
	public void set_ADDRESS_ID(int nIndex, Integer value) throws FMLManipulationException { this.fmlBuffer[22].setValue(nIndex, value); }
	public int get_ADDRESS_ID_size() throws FMLManipulationException { return (this.fmlBuffer[22].getCount()); }


	public String get_NAME_FORMAT(int nIndex) throws FMLManipulationException { return (TypeConverter.byteToString((Byte) this.fmlBuffer[23].getValue(nIndex))); }
	public void set_NAME_FORMAT(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[23].setValue(nIndex, TypeConverter.stringToByte(value)); }
	public int get_NAME_FORMAT_size() throws FMLManipulationException { return (this.fmlBuffer[23].getCount()); }


	public String get_ADDITIONAL_TITLE(int nIndex) throws FMLManipulationException { return ((String) this.fmlBuffer[24].getValue(nIndex)); }
	public void set_ADDITIONAL_TITLE(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[24].setValue(nIndex, value); }
	public int get_ADDITIONAL_TITLE_size() throws FMLManipulationException { return (this.fmlBuffer[24].getCount()); }


	public String get_LISTED_IND(int nIndex) throws FMLManipulationException { return (TypeConverter.byteToString((Byte) this.fmlBuffer[25].getValue(nIndex))); }
	public void set_LISTED_IND(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[25].setValue(nIndex, TypeConverter.stringToByte(value)); }
	public int get_LISTED_IND_size() throws FMLManipulationException { return (this.fmlBuffer[25].getCount()); }


	public String get_NEXT_CTN(int nIndex) throws FMLManipulationException { return ((String) this.fmlBuffer[26].getValue(nIndex)); }
	public void set_NEXT_CTN(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[26].setValue(nIndex, value); }
	public int get_NEXT_CTN_size() throws FMLManipulationException { return (this.fmlBuffer[26].getCount()); }


	public Integer get_NEXT_BAN(int nIndex) throws FMLManipulationException { return ((Integer) this.fmlBuffer[27].getValue(nIndex)); }
	public void set_NEXT_BAN(int nIndex, Integer value) throws FMLManipulationException { this.fmlBuffer[27].setValue(nIndex, value); }
	public int get_NEXT_BAN_size() throws FMLManipulationException { return (this.fmlBuffer[27].getCount()); }


	public String get_SUSP_RC_RATE_TYPE(int nIndex) throws FMLManipulationException { return (TypeConverter.byteToString((Byte) this.fmlBuffer[28].getValue(nIndex))); }
	public void set_SUSP_RC_RATE_TYPE(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[28].setValue(nIndex, TypeConverter.stringToByte(value)); }
	public int get_SUSP_RC_RATE_TYPE_size() throws FMLManipulationException { return (this.fmlBuffer[28].getCount()); }


	public Integer get_SUBSCRIBER_ID(int nIndex) throws FMLManipulationException { return ((Integer) this.fmlBuffer[29].getValue(nIndex)); }
	public void set_SUBSCRIBER_ID(int nIndex, Integer value) throws FMLManipulationException { this.fmlBuffer[29].setValue(nIndex, value); }
	public int get_SUBSCRIBER_ID_size() throws FMLManipulationException { return (this.fmlBuffer[29].getCount()); }


	public String get_INTERNAL_CIRCUIT_ID(int nIndex) throws FMLManipulationException { return ((String) this.fmlBuffer[30].getValue(nIndex)); }
	public void set_INTERNAL_CIRCUIT_ID(int nIndex, String value) throws FMLManipulationException { this.fmlBuffer[30].setValue(nIndex, value); }
	public int get_INTERNAL_CIRCUIT_ID_size() throws FMLManipulationException { return (this.fmlBuffer[30].getCount()); }



} // CsLsBanCtnOutput
